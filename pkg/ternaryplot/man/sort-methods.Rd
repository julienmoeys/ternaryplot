% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sort.R
\name{sort.ternarySystem}
\alias{sort.ternarySystem}
\title{INTERNAL. Sort method for ternary classification (class centroids of ternarySystem).}
\usage{
\method{sort}{ternarySystem}(x, by, ...)
}
\arguments{
\item{x}{Either \itemize{
  \item A \code{\link[ternaryplot]{ternarySystem-class}} 
    object, or 
  \item A single character string naming an existing  
    \code{\link[ternaryplot]{ternaryVariables-class}}.
}}

\item{by}{A vector of 2 character strings. Names of the two ternary 
variables (from \code{blrNames(x)}) after which the class 
centroids should be sorted.}

\item{\dots}{Additional parameters passed to \code{\link[base]{order}}, 
such as \code{decreasing}.}
}
\value{
A \code{\link[base]{data.frame}}. The output of 
 \code{as.data.frame(x,what='centroids')} ordered ordered 
 after increasing (the default) or decreasing values of 
 the two ternary-variables in \code{by}.
}
\description{
INTERNAL. Sort method for ternary classification (class 
 centroids of a \code{\link[ternaryplot]{ternarySystem-class}}), 
 after two of its three ternary-variables (increasing or 
 decreasing order).
 
 The order in which the classes are defined matters when 
 classifying ternary data (in case a data point lies 
 between two or more classes). This function aims at 
 helping users that implements new classification 
 systems to check how these classes could be sorted (for 
 example in the case of a soil texture classification, 
 the classes could be defined by order of decreasing clay 
 and (then) sand content).
}
\examples{

library( "ternaryplot" )

hypres <- getTernarySystem( "hypres" )

sort( hypres, by = c( "CLAY", "SAND" ), decreasing = TRUE ) 

sort( hypres, by = c( "CLAY", "SAND" ), decreasing = FALSE ) 

#   Compared to 
as.data.frame( hypres, what = "centroids" )
}

