% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ternaryClassNames.R
\name{ternaryClassNames}
\alias{ternaryClassNames}
\alias{ternaryClassNames.ternarySystem}
\alias{ternaryClassNames<-}
\alias{ternaryClassNames<-.ternarySystem}
\title{Set or get the abbreviations (labels) of the classes of a ternary classification}
\usage{
ternaryClassNames(s, ...)

\method{ternaryClassNames}{ternarySystem}(s, ...)

ternaryClassNames(s, ... ) <- value

\method{ternaryClassNames}{ternarySystem}(s, ...) <- value
}
\arguments{
\item{s}{A \code{\link[ternaryplot]{ternarySystem-class}} object.}

\item{value}{A vector of \code{n} character strings. New abbreviations 
of the ternary classes in \code{s}. Class abbreviations 
should be given in the same order as 
output from \code{ternaryClassNames(s)}.}

\item{\dots}{Additional parameters passed to 
\code{\link[ternaryplot]{ternaryCheck}}.}
}
\value{
\code{ternaryClassNames(s)} returns a vector of character 
 strings, the class abbreviations, with as many values as 
 classes in \code{s}. If \code{s} does not have any classes 
 it returns an empty character string (\code{character(0)}).
}
\description{
Set or get the abbreviations (labels) of the classes of a 
 ternary classification (a 
 \code{\link[ternaryplot]{ternarySystem-class}} 
 object that contains a ternary classification).
}
\details{
Notice that this function should \emph{not} be used to 
 reorder the classes of a ternary classification.

When changing/setting the abbreviations of a ternary 
 classification, \bold{it is very important to make sure 
 the new abbreviations}  (in \code{value}, see below) 
 \bold{are provided in the same order as the original 
 abbreviation of each class} (as returned by 
 \code{ternaryClassNames(s)}). No internal check is done 
 to make sure this is the case.
}
\examples{

library( "ternaryplot" ) 

hypres <- getTernarySystem( s = "hypres" )

ternaryClassNames( hypres ) 
# [1] "C"  "MF" "M"  "F"  "VF"

ternaryClassNames( hypres ) <- 
    tolower( ternaryClassNames( hypres ) )

ternaryClassNames( hypres )
# [1] "c"  "mf" "m"  "f"  "vf"

# # Plot the resulting ternary classification
# ternaryPlot( hypres ) 
}

