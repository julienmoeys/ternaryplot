% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ternaryBins.R
\name{ternaryBins}
\alias{ternaryBins}
\alias{ternaryBins.ternarySystem}
\title{Add bins (counts in ternary grid cells) to a ternary plot}
\usage{
ternaryBins(s, x, ...)

\method{ternaryBins}{ternarySystem}(s, x, grid = TRUE, breaks = 6L,
  cut.args = NULL, legend.add = TRUE, legend.x = NULL,
  legend.title = "counts", legend.args = NULL, noZero = TRUE, ...)
}
\arguments{
\item{s}{Either \itemize{
  \item A \code{\link[ternaryplot]{ternarySystem-class}}. 
    That \code{ternarySystem-class} must contain 
    a ternary classification. 
  \item A single character string, the name of an existing 
    pre-defined \code{\link[ternaryplot]{ternarySystem-class}}.
  \item A \code{\link[ternaryplot]{ternaryPolygons-class}}.
}}

\item{x}{A \code{\link[base]{data.frame}} or a 
\code{\link[base]{matrix}} containing point ternary data 
to be binned and counted. It should contain the 3 columns 
names given by \code{blrNames(s)}.}

\item{grid}{Single logical value. Set to \code{TRUE} (the default) 
to retrieve counts for a systematic ternary grid, and 
to \code{FALSE} to count the number of \code{x}-data 
points per class in \code{s} instead.}

\item{breaks}{See \code{\link[base]{cut}}. Break-values or number of 
groups to be used when preparing the colour-scale and 
the colour-scale legend for the binned values. See 
also \code{cut.args} below.}

\item{cut.args}{If not \code{NULL}, a list of additional arguments to be 
passed to \code{\link[base]{cut}} (see \code{breaks} 
above). Values \code{x}, \code{breaks}, \code{dig.lab} 
and \code{include.lowest} not allowed. \code{dig.lab} 
is internally set to 0 (as counts are integer values) 
and \code{include.lowest} is set to \code{TRUE} internally.}

\item{legend.add}{Single logical value. If \code{TRUE} (the default), 
a legend is added on the plot.}

\item{legend.x}{See argument \code{x} in \code{\link[graphics]{legend}}. 
Position of the legend. Default value is \code{topright} 
unless \code{tlrAngles(s)[3L]} is higher than 60 degrees 
(which indicates a ternary system with a right-angle 
located at the right side of the plot), in which case 
the value is set to \code{topleft} (set internally in 
all cases).}

\item{legend.title}{See argument \code{title} in \code{\link[graphics]{legend}}. 
Title of the legend.}

\item{legend.args}{If not \code{NULL}, a list of additional arguments to be 
passed to \code{\link[graphics]{legend}}. Arguments 
\code{x} and \code{title} are excluded and should be set 
with \code{legend.x} and \code{legend.title}.}

\item{noZero}{Single logical value. If \code{TRUE} (the default), 
zero-counts values are not shown on the plot. This also 
makes the legend more readable.}

\item{\dots}{Additional parameters passed to 
\code{\link[ternaryplot]{ternaryPolygons}}.}
}
\value{
Invisibly returns the output of 
 \code{\link[ternaryplot]{ternaryCount}}.
}
\description{
Add bins (counts in ternary grid cells) to a ternary plot
}
\examples{

library( "ternaryplot" )

data( "textureDataset", package = "ternaryplot" ) 

# 'sandwitch' plotting of different plot components (with bins)
# ==========================================================

ternaryPlot( "hypres" )
s <- ternaryPlot( "hypres", axes = FALSE, grid = FALSE, 
    classes = FALSE ) 
cnts <- ternaryBins( s = s, x = textureDataset ) 
ternaryPolygons( s = s, bg = NA ) 
ternaryGrid( s = s )
ternaryBox( s = s )
ternaryAxis( s = s )
ternaryPoints( s = s, x = textureDataset ) 

attr( cnts, "counts" )

# The same, all in one
# ==========================================================

ternaryPlot( s = "hypres", x = textureDataset, 
    type = c( "p", "c" ) )
}
\seealso{
\code{\link[ternaryplot]{ternaryPlot}} for plotting 
 ternary bins as a background of a ternary plot, and 
 \code{\link[ternaryplot]{ternaryCount}} for producing 
 the bins and count per bins but not plotting them.

 Package-options \code{bin.border.col} and \code{bin.bg.fun}  
 in \code{\link[ternaryplot]{tpPar}} are used internally.
}

