% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ternary2SpatialPoints.R
\name{ternary2SpatialPoints}
\alias{ternary2SpatialPoints}
\alias{ternary2SpatialPoints.character}
\alias{ternary2SpatialPoints.data.frame}
\alias{ternary2SpatialPoints.ternarySystem}
\title{Converts ternary*-class objects to SpatialPoints}
\usage{
ternary2SpatialPoints(x, ...)

\method{ternary2SpatialPoints}{data.frame}( x, s, ... )

\method{ternary2SpatialPoints}{ternarySystem}( x, what = "vertices", ... )

\method{ternary2SpatialPoints}{character}( x, what = "vertices", ... )
}
\arguments{
\item{x}{Either \code{\link{data.frame}} containing the ternary data to be converted
 to a \code{\link[sp]{SpatialPoints}}-object, or a \code{ternarySystem}, or a
 single character string naming a ternary system to be fetched with
 \code{\link[ternaryplot]{getTernarySystem}} from which the class vertices or
 the class centroids should be extracted (see argument \code{what} below).}

\item{s}{Only needed if \code{x} is a \code{\link{data.frame}}.
 Either a \code{ternarySystem} object, such as obtained with
 \code{\link[ternaryplot]{getTernarySystem}} or
 \code{\link[ternaryplot]{createTernarySystem}}, or a character
 string naming a \code{ternarySystem} to be fetched with
 \code{\link[ternaryplot]{getTernarySystem}}. Define the \code{ternarySystem}
 to be used to project the ternary data into an x-y system (as used by
 \code{\link[sp]{sp}}).}

\item{what}{Single character string. When \code{x} is a \code{ternarySystem}, what points
 should be extracted: the class vertices (\code{what = 'vertices'}, the default)
 or the class centroids (\code{what = 'vertices'})}

\item{\dots}{Additional parameters passed to specific methods.}
}
\value{
A \code{\link[sp]{SpatialPoints}}
}
\description{
Converts ternary*-class objects to
 \code{\link[sp]{SpatialPoints}}
}
\examples{

library( "ternaryplot" ) 

#   Plot a ternary diagram with some classification
#   * Set the style
ternaryStyle( "margin" = TRUE ) 
#   * Plot diagram
s <- ternaryPlot( "hypres" ) 

#   Extract classification vertices and centroids 
pts1 <- ternary2SpatialPoints( s )
pts2 <- ternary2SpatialPoints( s, what = "centroids" )

#   Add to the existing ternary plot
sp::plot( pts1, add = T, col = "darkred", pch = 1 ) 
sp::plot( pts2, add = T, col = "darkblue", pch = 3 ) 

}

